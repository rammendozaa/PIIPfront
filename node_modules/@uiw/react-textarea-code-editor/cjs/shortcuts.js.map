{
  "version": 3,
  "sources": [
    "../src/shortcuts.ts"
  ],
  "names": [
    "shortcuts",
    "e",
    "api",
    "SelectionText",
    "target",
    "code",
    "toLowerCase",
    "start",
    "end",
    "insertText",
    "position",
    "getSelectedValue",
    "indexOf",
    "shiftKey",
    "lineStarRemove",
    "lineStarInstert",
    "notifyChange",
    "indent",
    "getIndentText",
    "length",
    "test",
    "val",
    "txt"
  ],
  "mappings": ";;;;;;;AACA;;AACA;;AAEe,SAASA,SAAT,CAAmBC,CAAnB,EAAgE;AAC7E,MAAMC,GAAG,GAAG,IAAIC,4BAAJ,CAAkBF,CAAC,CAACG,MAApB,CAAZ;;AACA,MAAIH,CAAC,CAACI,IAAF,IAAUJ,CAAC,CAACI,IAAF,CAAOC,WAAP,OAAyB,KAAvC,EAA8C;AAC5C,gCAAgBL,CAAhB;;AACA,QAAIC,GAAG,CAACK,KAAJ,KAAcL,GAAG,CAACM,GAAtB,EAA2B;AACzBN,MAAAA,GAAG,CAACO,UAAJ,CAAe,IAAf,EAAqBC,QAArB,CAA8BR,GAAG,CAACK,KAAJ,GAAY,CAA1C,EAA6CL,GAAG,CAACM,GAAJ,GAAU,CAAvD;AACD,KAFD,MAEO,IAAIN,GAAG,CAACS,gBAAJ,GAAuBC,OAAvB,CAA+B,IAA/B,IAAuC,CAAC,CAAxC,IAA6CX,CAAC,CAACY,QAAnD,EAA6D;AAClEX,MAAAA,GAAG,CAACY,cAAJ,CAAmB,IAAnB;AACD,KAFM,MAEA,IAAIZ,GAAG,CAACS,gBAAJ,GAAuBC,OAAvB,CAA+B,IAA/B,IAAuC,CAAC,CAA5C,EAA+C;AACpDV,MAAAA,GAAG,CAACa,eAAJ,CAAoB,IAApB;AACD,KAFM,MAEA;AACLb,MAAAA,GAAG,CAACO,UAAJ,CAAe,IAAf,EAAqBC,QAArB,CAA8BR,GAAG,CAACK,KAAJ,GAAY,CAA1C,EAA6CL,GAAG,CAACM,GAAjD;AACD;;AACDN,IAAAA,GAAG,CAACc,YAAJ;AACD,GAZD,MAYO,IAAIf,CAAC,CAACI,IAAF,IAAUJ,CAAC,CAACI,IAAF,CAAOC,WAAP,OAAyB,OAAvC,EAAgD;AACrD,gCAAgBL,CAAhB;AACA,QAAMgB,MAAM,eAAQf,GAAG,CAACgB,aAAJ,EAAR,CAAZ;AACAhB,IAAAA,GAAG,CAACO,UAAJ,CAAeQ,MAAf,EAAuBP,QAAvB,CAAgCR,GAAG,CAACK,KAAJ,GAAYU,MAAM,CAACE,MAAnD,EAA2DjB,GAAG,CAACK,KAAJ,GAAYU,MAAM,CAACE,MAA9E;AACAjB,IAAAA,GAAG,CAACc,YAAJ;AACD,GALM,MAKA,IACLf,CAAC,CAACI,IAAF,IACA,+CAA+Ce,IAA/C,CAAoDnB,CAAC,CAACI,IAAF,CAAOC,WAAP,EAApD,CADA,IAEAJ,GAAG,CAACS,gBAAJ,EAHK,EAIL;AACA,gCAAgBV,CAAhB;AACA,QAAMoB,GAAG,GAAGnB,GAAG,CAACS,gBAAJ,EAAZ;AACA,QAAIW,GAAG,GAAG,EAAV;;AACA,YAAQrB,CAAC,CAACI,IAAF,CAAOC,WAAP,EAAR;AACE,WAAK,OAAL;AACEgB,QAAAA,GAAG,cAAOD,GAAP,MAAH;;AACA,YAAIpB,CAAC,CAACY,QAAN,EAAgB;AACdS,UAAAA,GAAG,eAAOD,GAAP,OAAH;AACD;;AACD;;AACF,WAAK,WAAL;AACEC,QAAAA,GAAG,cAAQD,GAAR,MAAH;AACA;;AACF,WAAK,aAAL;AACEC,QAAAA,GAAG,cAAOD,GAAP,MAAH;;AACA,YAAIpB,CAAC,CAACY,QAAN,EAAgB;AACdS,UAAAA,GAAG,cAAOD,GAAP,MAAH;AACD;;AACD;;AACF,WAAK,QAAL;AACEC,QAAAA,GAAG,cAAOD,GAAP,MAAH;AACA;;AACF,WAAK,OAAL;AACEC,QAAAA,GAAG,cAAOD,GAAP,MAAH;AACA;AArBJ;;AAuBAnB,IAAAA,GAAG,CAACO,UAAJ,CAAea,GAAf;AACApB,IAAAA,GAAG,CAACc,YAAJ;AACD;AACF",
  "sourcesContent": [
    "import React from 'react';\nimport { stopPropagation } from './utils';\nimport { SelectionText } from './SelectionText';\n\nexport default function shortcuts(e: React.KeyboardEvent<HTMLTextAreaElement>) {\n  const api = new SelectionText(e.target as HTMLTextAreaElement);\n  if (e.code && e.code.toLowerCase() === 'tab') {\n    stopPropagation(e);\n    if (api.start === api.end) {\n      api.insertText('  ').position(api.start + 2, api.end + 2);\n    } else if (api.getSelectedValue().indexOf('\\n') > -1 && e.shiftKey) {\n      api.lineStarRemove('  ');\n    } else if (api.getSelectedValue().indexOf('\\n') > -1) {\n      api.lineStarInstert('  ');\n    } else {\n      api.insertText('  ').position(api.start + 2, api.end);\n    }\n    api.notifyChange();\n  } else if (e.code && e.code.toLowerCase() === 'enter') {\n    stopPropagation(e);\n    const indent = `\\n${api.getIndentText()}`;\n    api.insertText(indent).position(api.start + indent.length, api.start + indent.length);\n    api.notifyChange();\n  } else if (\n    e.code &&\n    /^(quote|backquote|bracketleft|digit9|comma)$/.test(e.code.toLowerCase()) &&\n    api.getSelectedValue()\n  ) {\n    stopPropagation(e);\n    const val = api.getSelectedValue();\n    let txt = '';\n    switch (e.code.toLowerCase()) {\n      case 'quote':\n        txt = `'${val}'`;\n        if (e.shiftKey) {\n          txt = `\"${val}\"`;\n        }\n        break;\n      case 'backquote':\n        txt = `\\`${val}\\``;\n        break;\n      case 'bracketleft':\n        txt = `[${val}]`;\n        if (e.shiftKey) {\n          txt = `{${val}}`;\n        }\n        break;\n      case 'digit9':\n        txt = `(${val})`;\n        break;\n      case 'comma':\n        txt = `<${val}>`;\n        break;\n    }\n    api.insertText(txt);\n    api.notifyChange();\n  }\n}\n"
  ]
}